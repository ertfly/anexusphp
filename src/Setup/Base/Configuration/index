<?php

use AnexusPHP\Core\Router;
use Kuria\Error\ErrorHandler;
use Kuria\Debug\Error;
use Kuria\Error\Screen\WebErrorScreen;

//Define o timezone
date_default_timezone_set('America/Sao_Paulo');

//Define o separador de diretorio
define('DS', DIRECTORY_SEPARATOR);

define('MODE', 'production');
define('ASSETS_VERSION', '1.0');
define('PATH_ROOT', dirname(__FILE__) . DS . '..' . DS);
define('PATH_PUBLIC', PATH_ROOT . 'public' . DS);
define('PATH_CACHE', PATH_ROOT . 'cache' . DS);
define('PATH_LOGS', PATH_ROOT . 'logs' . DS);
define('PATH_TMP', PATH_ROOT . 'tmp' . DS);
define('PATH_CRON', PATH_ROOT . 'cron' . DS);
define('PATH_UPLOADS', PATH_PUBLIC . 'uploads' . DS);
define('PATH_MIGRATIONS', PATH_ROOT . 'migrations' . DS);
define('PATH_ROUTES', PATH_ROOT . 'routes' . DS);

define('SESSION_LIFETIME', (60 * 30));
define('SESSION_NAME', 'skeleton');

require PATH_ROOT . 'vendor/autoload.php';

$errorHandler = new ErrorHandler();
$errorHandler->setDebug(true);
$errorHandler->register();

$errorHandler->on('exception', function ($exception, $debug) {
    $logFilePath = sprintf(PATH_LOGS . DS . 'errors_%s.log', $debug ? 'debug' : 'prod');
    $entry = sprintf(
        "[%s] %s - %s in file %s on line %d\n", date('Y-m-d H:i:s'), Error::getExceptionName($exception), $exception->getMessage(), $exception->getFile(), $exception->getLine()
    );
    file_put_contents($logFilePath, $entry, FILE_APPEND | LOCK_EX);
});

$exceptionHandler = $errorHandler->getExceptionHandler();
if (!$errorHandler->getDebug() && $exceptionHandler instanceof WebErrorScreen) {
    $exceptionHandler->on('render', function ($event) {
        $event['title'] = 'SKELETON';
        $event['heading'] = 'Ocorreu um erro interno no servidor';
        $event['text'] = 'Identificamos um erro interno do servidor e jรก estamos corrigindo, pedimos desculpa pelo transtorno, em alguns instantes retornaremos';
    });
}

Router::start();
//Arquivo apenas de início do sistema, nenhuma codificação deve vir aqui
